// Code generated from C:/Users/Psydu/GolandProjects/go-zero/tools/goctl/api/parser/g4\ApiParser.g4 by ANTLR 4.12.0. DO NOT EDIT.

package api

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ApiParserLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var apiparserlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func apiparserlexerLexerInit() {
	staticData := &apiparserlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'='", "'('", "')'", "'{'", "'}'", "'*'", "'time.Time'", "'['",
		"']'", "'returns'", "'-'", "'/'", "'/:'", "'@doc'", "'@handler'", "'@desc'",
		"'interface{}'", "'@server'", "'@type'", "'<-'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "ATDOC", "ATHANDLER",
		"ATDESC", "INTERFACE", "ATSERVER", "ATTYPE", "AS", "WS", "COMMENT",
		"LINE_COMMENT", "STRING", "RAW_STRING", "LINE_VALUE", "ID", "LetterOrDigit",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "ATDOC", "ATHANDLER", "ATDESC", "INTERFACE",
		"ATSERVER", "ATTYPE", "AS", "WS", "COMMENT", "LINE_COMMENT", "STRING",
		"RAW_STRING", "LINE_VALUE", "ID", "LetterOrDigit", "ExponentPart", "EscapeSequence",
		"HexDigits", "HexDigit", "Digits", "Letter",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 28, 295, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1,
		2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1,
		12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 4, 20, 161,
		8, 20, 11, 20, 12, 20, 162, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 5,
		21, 171, 8, 21, 10, 21, 12, 21, 174, 9, 21, 1, 21, 1, 21, 1, 21, 1, 21,
		1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 5, 22, 185, 8, 22, 10, 22, 12, 22, 188,
		9, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 5, 23, 195, 8, 23, 10, 23, 12,
		23, 198, 9, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 4, 24, 205, 8, 24, 11,
		24, 12, 24, 206, 1, 24, 1, 24, 1, 25, 1, 25, 5, 25, 213, 8, 25, 10, 25,
		12, 25, 216, 9, 25, 1, 25, 1, 25, 5, 25, 220, 8, 25, 10, 25, 12, 25, 223,
		9, 25, 3, 25, 225, 8, 25, 1, 26, 1, 26, 5, 26, 229, 8, 26, 10, 26, 12,
		26, 232, 9, 26, 1, 27, 1, 27, 3, 27, 236, 8, 27, 1, 28, 1, 28, 3, 28, 240,
		8, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 3, 29, 248, 8, 29, 1,
		29, 3, 29, 251, 8, 29, 1, 29, 1, 29, 1, 29, 4, 29, 256, 8, 29, 11, 29,
		12, 29, 257, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 3, 29, 265, 8, 29, 1, 30,
		1, 30, 1, 30, 5, 30, 270, 8, 30, 10, 30, 12, 30, 273, 9, 30, 1, 30, 3,
		30, 276, 8, 30, 1, 31, 1, 31, 1, 32, 1, 32, 5, 32, 282, 8, 32, 10, 32,
		12, 32, 285, 9, 32, 1, 32, 3, 32, 288, 8, 32, 1, 33, 1, 33, 1, 33, 1, 33,
		3, 33, 294, 8, 33, 1, 172, 0, 34, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49,
		25, 51, 26, 53, 27, 55, 28, 57, 0, 59, 0, 61, 0, 63, 0, 65, 0, 67, 0, 1,
		0, 18, 3, 0, 9, 10, 12, 13, 32, 32, 2, 0, 10, 10, 13, 13, 2, 0, 34, 34,
		92, 92, 4, 0, 10, 10, 13, 13, 92, 92, 96, 96, 2, 0, 9, 9, 32, 32, 4, 0,
		10, 10, 13, 13, 34, 34, 96, 96, 1, 0, 48, 57, 2, 0, 69, 69, 101, 101, 2,
		0, 43, 43, 45, 45, 8, 0, 34, 34, 39, 39, 92, 92, 98, 98, 102, 102, 110,
		110, 114, 114, 116, 116, 1, 0, 48, 51, 1, 0, 48, 55, 3, 0, 48, 57, 65,
		70, 97, 102, 2, 0, 48, 57, 95, 95, 4, 0, 36, 36, 65, 90, 95, 95, 97, 122,
		2, 0, 0, 127, 55296, 56319, 1, 0, 55296, 56319, 1, 0, 56320, 57343, 313,
		0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0,
		0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0,
		0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0,
		0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1,
		0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39,
		1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0,
		47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0,
		0, 55, 1, 0, 0, 0, 1, 69, 1, 0, 0, 0, 3, 71, 1, 0, 0, 0, 5, 73, 1, 0, 0,
		0, 7, 75, 1, 0, 0, 0, 9, 77, 1, 0, 0, 0, 11, 79, 1, 0, 0, 0, 13, 81, 1,
		0, 0, 0, 15, 91, 1, 0, 0, 0, 17, 93, 1, 0, 0, 0, 19, 95, 1, 0, 0, 0, 21,
		103, 1, 0, 0, 0, 23, 105, 1, 0, 0, 0, 25, 107, 1, 0, 0, 0, 27, 110, 1,
		0, 0, 0, 29, 115, 1, 0, 0, 0, 31, 124, 1, 0, 0, 0, 33, 130, 1, 0, 0, 0,
		35, 142, 1, 0, 0, 0, 37, 150, 1, 0, 0, 0, 39, 156, 1, 0, 0, 0, 41, 160,
		1, 0, 0, 0, 43, 166, 1, 0, 0, 0, 45, 180, 1, 0, 0, 0, 47, 191, 1, 0, 0,
		0, 49, 201, 1, 0, 0, 0, 51, 210, 1, 0, 0, 0, 53, 226, 1, 0, 0, 0, 55, 235,
		1, 0, 0, 0, 57, 237, 1, 0, 0, 0, 59, 264, 1, 0, 0, 0, 61, 266, 1, 0, 0,
		0, 63, 277, 1, 0, 0, 0, 65, 279, 1, 0, 0, 0, 67, 293, 1, 0, 0, 0, 69, 70,
		5, 61, 0, 0, 70, 2, 1, 0, 0, 0, 71, 72, 5, 40, 0, 0, 72, 4, 1, 0, 0, 0,
		73, 74, 5, 41, 0, 0, 74, 6, 1, 0, 0, 0, 75, 76, 5, 123, 0, 0, 76, 8, 1,
		0, 0, 0, 77, 78, 5, 125, 0, 0, 78, 10, 1, 0, 0, 0, 79, 80, 5, 42, 0, 0,
		80, 12, 1, 0, 0, 0, 81, 82, 5, 116, 0, 0, 82, 83, 5, 105, 0, 0, 83, 84,
		5, 109, 0, 0, 84, 85, 5, 101, 0, 0, 85, 86, 5, 46, 0, 0, 86, 87, 5, 84,
		0, 0, 87, 88, 5, 105, 0, 0, 88, 89, 5, 109, 0, 0, 89, 90, 5, 101, 0, 0,
		90, 14, 1, 0, 0, 0, 91, 92, 5, 91, 0, 0, 92, 16, 1, 0, 0, 0, 93, 94, 5,
		93, 0, 0, 94, 18, 1, 0, 0, 0, 95, 96, 5, 114, 0, 0, 96, 97, 5, 101, 0,
		0, 97, 98, 5, 116, 0, 0, 98, 99, 5, 117, 0, 0, 99, 100, 5, 114, 0, 0, 100,
		101, 5, 110, 0, 0, 101, 102, 5, 115, 0, 0, 102, 20, 1, 0, 0, 0, 103, 104,
		5, 45, 0, 0, 104, 22, 1, 0, 0, 0, 105, 106, 5, 47, 0, 0, 106, 24, 1, 0,
		0, 0, 107, 108, 5, 47, 0, 0, 108, 109, 5, 58, 0, 0, 109, 26, 1, 0, 0, 0,
		110, 111, 5, 64, 0, 0, 111, 112, 5, 100, 0, 0, 112, 113, 5, 111, 0, 0,
		113, 114, 5, 99, 0, 0, 114, 28, 1, 0, 0, 0, 115, 116, 5, 64, 0, 0, 116,
		117, 5, 104, 0, 0, 117, 118, 5, 97, 0, 0, 118, 119, 5, 110, 0, 0, 119,
		120, 5, 100, 0, 0, 120, 121, 5, 108, 0, 0, 121, 122, 5, 101, 0, 0, 122,
		123, 5, 114, 0, 0, 123, 30, 1, 0, 0, 0, 124, 125, 5, 64, 0, 0, 125, 126,
		5, 100, 0, 0, 126, 127, 5, 101, 0, 0, 127, 128, 5, 115, 0, 0, 128, 129,
		5, 99, 0, 0, 129, 32, 1, 0, 0, 0, 130, 131, 5, 105, 0, 0, 131, 132, 5,
		110, 0, 0, 132, 133, 5, 116, 0, 0, 133, 134, 5, 101, 0, 0, 134, 135, 5,
		114, 0, 0, 135, 136, 5, 102, 0, 0, 136, 137, 5, 97, 0, 0, 137, 138, 5,
		99, 0, 0, 138, 139, 5, 101, 0, 0, 139, 140, 5, 123, 0, 0, 140, 141, 5,
		125, 0, 0, 141, 34, 1, 0, 0, 0, 142, 143, 5, 64, 0, 0, 143, 144, 5, 115,
		0, 0, 144, 145, 5, 101, 0, 0, 145, 146, 5, 114, 0, 0, 146, 147, 5, 118,
		0, 0, 147, 148, 5, 101, 0, 0, 148, 149, 5, 114, 0, 0, 149, 36, 1, 0, 0,
		0, 150, 151, 5, 64, 0, 0, 151, 152, 5, 116, 0, 0, 152, 153, 5, 121, 0,
		0, 153, 154, 5, 112, 0, 0, 154, 155, 5, 101, 0, 0, 155, 38, 1, 0, 0, 0,
		156, 157, 5, 60, 0, 0, 157, 158, 5, 45, 0, 0, 158, 40, 1, 0, 0, 0, 159,
		161, 7, 0, 0, 0, 160, 159, 1, 0, 0, 0, 161, 162, 1, 0, 0, 0, 162, 160,
		1, 0, 0, 0, 162, 163, 1, 0, 0, 0, 163, 164, 1, 0, 0, 0, 164, 165, 6, 20,
		0, 0, 165, 42, 1, 0, 0, 0, 166, 167, 5, 47, 0, 0, 167, 168, 5, 42, 0, 0,
		168, 172, 1, 0, 0, 0, 169, 171, 9, 0, 0, 0, 170, 169, 1, 0, 0, 0, 171,
		174, 1, 0, 0, 0, 172, 173, 1, 0, 0, 0, 172, 170, 1, 0, 0, 0, 173, 175,
		1, 0, 0, 0, 174, 172, 1, 0, 0, 0, 175, 176, 5, 42, 0, 0, 176, 177, 5, 47,
		0, 0, 177, 178, 1, 0, 0, 0, 178, 179, 6, 21, 1, 0, 179, 44, 1, 0, 0, 0,
		180, 181, 5, 47, 0, 0, 181, 182, 5, 47, 0, 0, 182, 186, 1, 0, 0, 0, 183,
		185, 8, 1, 0, 0, 184, 183, 1, 0, 0, 0, 185, 188, 1, 0, 0, 0, 186, 184,
		1, 0, 0, 0, 186, 187, 1, 0, 0, 0, 187, 189, 1, 0, 0, 0, 188, 186, 1, 0,
		0, 0, 189, 190, 6, 22, 1, 0, 190, 46, 1, 0, 0, 0, 191, 196, 5, 34, 0, 0,
		192, 195, 8, 2, 0, 0, 193, 195, 3, 59, 29, 0, 194, 192, 1, 0, 0, 0, 194,
		193, 1, 0, 0, 0, 195, 198, 1, 0, 0, 0, 196, 194, 1, 0, 0, 0, 196, 197,
		1, 0, 0, 0, 197, 199, 1, 0, 0, 0, 198, 196, 1, 0, 0, 0, 199, 200, 5, 34,
		0, 0, 200, 48, 1, 0, 0, 0, 201, 204, 5, 96, 0, 0, 202, 205, 8, 3, 0, 0,
		203, 205, 3, 59, 29, 0, 204, 202, 1, 0, 0, 0, 204, 203, 1, 0, 0, 0, 205,
		206, 1, 0, 0, 0, 206, 204, 1, 0, 0, 0, 206, 207, 1, 0, 0, 0, 207, 208,
		1, 0, 0, 0, 208, 209, 5, 96, 0, 0, 209, 50, 1, 0, 0, 0, 210, 214, 5, 58,
		0, 0, 211, 213, 7, 4, 0, 0, 212, 211, 1, 0, 0, 0, 213, 216, 1, 0, 0, 0,
		214, 212, 1, 0, 0, 0, 214, 215, 1, 0, 0, 0, 215, 224, 1, 0, 0, 0, 216,
		214, 1, 0, 0, 0, 217, 225, 3, 47, 23, 0, 218, 220, 8, 5, 0, 0, 219, 218,
		1, 0, 0, 0, 220, 223, 1, 0, 0, 0, 221, 219, 1, 0, 0, 0, 221, 222, 1, 0,
		0, 0, 222, 225, 1, 0, 0, 0, 223, 221, 1, 0, 0, 0, 224, 217, 1, 0, 0, 0,
		224, 221, 1, 0, 0, 0, 225, 52, 1, 0, 0, 0, 226, 230, 3, 67, 33, 0, 227,
		229, 3, 55, 27, 0, 228, 227, 1, 0, 0, 0, 229, 232, 1, 0, 0, 0, 230, 228,
		1, 0, 0, 0, 230, 231, 1, 0, 0, 0, 231, 54, 1, 0, 0, 0, 232, 230, 1, 0,
		0, 0, 233, 236, 3, 67, 33, 0, 234, 236, 7, 6, 0, 0, 235, 233, 1, 0, 0,
		0, 235, 234, 1, 0, 0, 0, 236, 56, 1, 0, 0, 0, 237, 239, 7, 7, 0, 0, 238,
		240, 7, 8, 0, 0, 239, 238, 1, 0, 0, 0, 239, 240, 1, 0, 0, 0, 240, 241,
		1, 0, 0, 0, 241, 242, 3, 65, 32, 0, 242, 58, 1, 0, 0, 0, 243, 244, 5, 92,
		0, 0, 244, 265, 7, 9, 0, 0, 245, 250, 5, 92, 0, 0, 246, 248, 7, 10, 0,
		0, 247, 246, 1, 0, 0, 0, 247, 248, 1, 0, 0, 0, 248, 249, 1, 0, 0, 0, 249,
		251, 7, 11, 0, 0, 250, 247, 1, 0, 0, 0, 250, 251, 1, 0, 0, 0, 251, 252,
		1, 0, 0, 0, 252, 265, 7, 11, 0, 0, 253, 255, 5, 92, 0, 0, 254, 256, 5,
		117, 0, 0, 255, 254, 1, 0, 0, 0, 256, 257, 1, 0, 0, 0, 257, 255, 1, 0,
		0, 0, 257, 258, 1, 0, 0, 0, 258, 259, 1, 0, 0, 0, 259, 260, 3, 63, 31,
		0, 260, 261, 3, 63, 31, 0, 261, 262, 3, 63, 31, 0, 262, 263, 3, 63, 31,
		0, 263, 265, 1, 0, 0, 0, 264, 243, 1, 0, 0, 0, 264, 245, 1, 0, 0, 0, 264,
		253, 1, 0, 0, 0, 265, 60, 1, 0, 0, 0, 266, 275, 3, 63, 31, 0, 267, 270,
		3, 63, 31, 0, 268, 270, 5, 95, 0, 0, 269, 267, 1, 0, 0, 0, 269, 268, 1,
		0, 0, 0, 270, 273, 1, 0, 0, 0, 271, 269, 1, 0, 0, 0, 271, 272, 1, 0, 0,
		0, 272, 274, 1, 0, 0, 0, 273, 271, 1, 0, 0, 0, 274, 276, 3, 63, 31, 0,
		275, 271, 1, 0, 0, 0, 275, 276, 1, 0, 0, 0, 276, 62, 1, 0, 0, 0, 277, 278,
		7, 12, 0, 0, 278, 64, 1, 0, 0, 0, 279, 287, 7, 6, 0, 0, 280, 282, 7, 13,
		0, 0, 281, 280, 1, 0, 0, 0, 282, 285, 1, 0, 0, 0, 283, 281, 1, 0, 0, 0,
		283, 284, 1, 0, 0, 0, 284, 286, 1, 0, 0, 0, 285, 283, 1, 0, 0, 0, 286,
		288, 7, 6, 0, 0, 287, 283, 1, 0, 0, 0, 287, 288, 1, 0, 0, 0, 288, 66, 1,
		0, 0, 0, 289, 294, 7, 14, 0, 0, 290, 294, 8, 15, 0, 0, 291, 292, 7, 16,
		0, 0, 292, 294, 7, 17, 0, 0, 293, 289, 1, 0, 0, 0, 293, 290, 1, 0, 0, 0,
		293, 291, 1, 0, 0, 0, 294, 68, 1, 0, 0, 0, 24, 0, 162, 172, 186, 194, 196,
		204, 206, 214, 221, 224, 230, 235, 239, 247, 250, 257, 264, 269, 271, 275,
		283, 287, 293, 2, 0, 1, 0, 0, 88, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ApiParserLexerInit initializes any static state used to implement ApiParserLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewApiParserLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ApiParserLexerInit() {
	staticData := &apiparserlexerLexerStaticData
	staticData.once.Do(apiparserlexerLexerInit)
}

// NewApiParserLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewApiParserLexer(input antlr.CharStream) *ApiParserLexer {
	ApiParserLexerInit()
	l := new(ApiParserLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &apiparserlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "ApiParser.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ApiParserLexer tokens.
const (
	ApiParserLexerT__0          = 1
	ApiParserLexerT__1          = 2
	ApiParserLexerT__2          = 3
	ApiParserLexerT__3          = 4
	ApiParserLexerT__4          = 5
	ApiParserLexerT__5          = 6
	ApiParserLexerT__6          = 7
	ApiParserLexerT__7          = 8
	ApiParserLexerT__8          = 9
	ApiParserLexerT__9          = 10
	ApiParserLexerT__10         = 11
	ApiParserLexerT__11         = 12
	ApiParserLexerT__12         = 13
	ApiParserLexerATDOC         = 14
	ApiParserLexerATHANDLER     = 15
	ApiParserLexerATDESC        = 16
	ApiParserLexerINTERFACE     = 17
	ApiParserLexerATSERVER      = 18
	ApiParserLexerATTYPE        = 19
	ApiParserLexerAS            = 20
	ApiParserLexerWS            = 21
	ApiParserLexerCOMMENT       = 22
	ApiParserLexerLINE_COMMENT  = 23
	ApiParserLexerSTRING        = 24
	ApiParserLexerRAW_STRING    = 25
	ApiParserLexerLINE_VALUE    = 26
	ApiParserLexerID            = 27
	ApiParserLexerLetterOrDigit = 28
)

const COMEMNTS = 88
